import{o as n,e as a,q as s,G as e}from"./framework.c00dda38.js";const t='{"title":"Navigation Guards","description":"","frontmatter":{},"headers":[{"level":2,"title":"Global Before Guards","slug":"global-before-guards"},{"level":3,"title":"Optional third argument next","slug":"optional-third-argument-next"},{"level":2,"title":"Global Resolve Guards","slug":"global-resolve-guards"},{"level":2,"title":"Global After Hooks","slug":"global-after-hooks"},{"level":2,"title":"Per-Route Guard","slug":"per-route-guard"},{"level":2,"title":"In-Component Guards","slug":"in-component-guards"},{"level":3,"title":"Using the options API","slug":"using-the-options-api"},{"level":3,"title":"Using the composition API","slug":"using-the-composition-api"},{"level":2,"title":"The Full Navigation Resolution Flow","slug":"the-full-navigation-resolution-flow"}],"relativePath":"guide/advanced/navigation-guards.md","lastUpdated":1607897288613.3352}';var o={};const p=e('',23),c=e('',3),r=e('',28);o.render=function(e,t,o,i,l,u){return n(),a("div",null,[p,s(" TODO: how to combine with [`meta` fields](./meta.md) to create a [generic fetching mechanism](#TODO). "),c,s(" TODO: maybe add links to examples "),r])};export default o;export{t as __pageData};
