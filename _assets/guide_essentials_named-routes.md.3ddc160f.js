import{o as a,e as n,G as s}from"./framework.c00dda38.js";const t='{"title":"Named Routes","description":"","frontmatter":{},"relativePath":"guide/essentials/named-routes.md","lastUpdated":1607559931863.911}';var e={};const o=s('<h1 id="named-routes"><a class="header-anchor" href="#named-routes" aria-hidden="true">#</a> Named Routes</h1><p>Alongside the <code>path</code>, you can provide a <code>name</code> to any route. This has the following advantages:</p><ul><li>No hardcoded URLs</li><li>Automatic encoding/decoding of <code>params</code></li><li>Prevents you from having a typo in the url</li><li>Bypassing path ranking (e.g. to display a )</li></ul><div class="language-js"><pre><code><span class="token keyword">const</span> routes <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    path<span class="token operator">:</span> <span class="token string">&#39;/user/:username&#39;</span><span class="token punctuation">,</span>\n    name<span class="token operator">:</span> <span class="token string">&#39;user&#39;</span><span class="token punctuation">,</span>\n    component<span class="token operator">:</span> User\n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span>\n</code></pre></div><p>To link to a named route, you can pass an object to the <code>router-link</code> component&#39;s <code>to</code> prop:</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">:to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ name: <span class="token punctuation">&#39;</span>user<span class="token punctuation">&#39;</span>, params: { username: <span class="token punctuation">&#39;</span>erina<span class="token punctuation">&#39;</span> }}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  User\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><p>This is the exact same object used programmatically with <code>router.push()</code>:</p><div class="language-js"><pre><code>router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;user&#39;</span><span class="token punctuation">,</span> params<span class="token operator">:</span> <span class="token punctuation">{</span> username<span class="token operator">:</span> <span class="token string">&#39;erina&#39;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><p>In both cases, the router will navigate to the path <code>/user/erina</code>.</p><p>Full example <a href="https://github.com/vuejs/vue-router/blob/dev/examples/named-routes/app.js" target="_blank" rel="noopener noreferrer">here</a>.</p>',10);e.render=function(s,t,e,p,c,r){return a(),n("div",null,[o])};export default e;export{t as __pageData};
